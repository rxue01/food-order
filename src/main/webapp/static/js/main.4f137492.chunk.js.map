{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","LoginForm","state","loading","onFinish","data","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","React","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","loadingRest","setLoadingRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","restId","value","onChange","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAQ,SAACC,GAElB,IAAMC,EAAQ,0BAAsBD,EAAWE,SAAjC,qBAAsDF,EAAWG,UAE/E,OAAOC,MAAMH,EAAU,CACnBI,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YACdC,MAAK,SAACC,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,sB,QCoElBC,E,4MACFC,MAAQ,CACJC,SAAS,G,EAGbC,SAAW,SAACC,GACR,EAAKC,SAAS,CACVH,SAAS,IAEbf,EAAMiB,GACDR,MAAK,WACFU,IAAQC,QAAR,oBACA,EAAKC,MAAMC,eAEdC,OAAM,SAACC,GACJL,IAAQM,MAAMD,EAAIL,YAErBO,SAAQ,WACL,EAAKR,SAAS,CACVH,SAAS,Q,EAKzBY,OAAS,WACL,OACI,eAAC,IAAD,CACIC,KAAK,eACLZ,SAAU,EAAKA,SACfa,MAAO,CACHC,MAAO,IACPC,OAAQ,QALhB,UAQI,cAAC,IAAKC,KAAN,CACIJ,KAAK,WACLK,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,gCAFvC,SAII,cAAC,IAAD,CAAOgB,OAAQ,cAACC,EAAA,EAAD,IAAkBC,YAAY,eAEjD,cAAC,IAAKL,KAAN,CACIJ,KAAK,WACLK,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,gCAFvC,SAII,cAAC,IAAMmB,SAAP,CAAgBH,OAAQ,cAACI,EAAA,EAAD,IAAkBF,YAAY,eAG1D,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAQQ,KAAK,UAAUC,SAAS,SAAS1B,QAAS,EAAKD,MAAMC,QAA7D,yB,YAhDI2B,IAAMC,WAyDf9B,I,2CCvIP+B,EAAWC,IAAXD,OAER,SAASE,EAAT,GAAoC,IAAVC,EAAS,EAATA,OACtB,EAA8BC,oBAAS,GAAvC,mBAAOjC,EAAP,KAAgBkC,EAAhB,KAeA,OACI,cAAC,IAAD,CAASC,MAAM,uBAAf,SACI,cAAC,IAAD,CACInC,QAASA,EACTyB,KAAK,UACLW,KAAM,cAACC,EAAA,EAAD,IACNC,QAnBM,WAIdJ,GAAW,GFgDc,SAACF,GAC1B,OAAO1C,MAAM,UAAD,OAAW0C,GAAU,CAC7BzC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,YACdC,MAAK,SAACC,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,6CEzDpB0C,CAAcP,GACTtC,MAAK,kBAAMU,IAAQC,QAAR,4BACXG,OAAM,SAACC,GAAD,OAASL,IAAQM,MAAMD,EAAIL,YACjCO,SAAQ,WACLuB,GAAW,WAmHZM,MAnGf,SAAkBlC,GAEd,MAA8B2B,qBAA9B,mBAAOQ,EAAP,KAAgBC,EAAhB,KAEA,EAAsCT,oBAAS,GAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KAEA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAEA,EAA8Bb,oBAAS,GAAvC,mBAAOjC,EAAP,KAAgBkC,EAAhB,KAEA,EAAgCD,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KAsCA,OAnCAC,qBAAU,WAGNL,GAAe,GFnBRtD,MAAM,gBAAgBI,MAAK,SAACC,GAC/B,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,2BAGhB,OAAOF,EAASuD,UEefxD,MAAM,SAAAC,GACHmD,EAAenD,MAElBa,OAAO,SAAAC,GACJL,IAAQM,MAAMD,EAAIL,YAErBO,SAAS,WACNiC,GAAe,QAExB,IAGHK,qBAAW,WF7Ca,IAACE,EEgDlBV,IACCP,GAAW,IFjDMiB,EEkDRV,EFjDNnD,MAAM,eAAD,OAAgB6D,EAAhB,UAA+BzD,MAAK,SAACC,GAC7C,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,qBAGhB,OAAOF,EAASuD,WE4CXxD,MAAM,SAAAC,GACHqD,EAAYrD,MAEfa,OAAO,SAAAC,GACJL,IAAQM,MAAMD,EAAIL,YAErBO,SAAS,WACNuB,GAAW,SAGxB,CAACO,IAGA,qCACI,cAAC,IAAD,CACIW,MAAOX,EACPzC,QAAS2C,EACT7B,MAAO,CAAEC,MAAO,KAChBO,YAAY,sBACZ+B,SAAW,aACXC,SAAW,SAAAF,GAAK,OAAIV,EAAWU,IANnC,SASQP,EAAYU,KACR,SAAAC,GAAI,OAAI,cAAC3B,EAAD,CAAsBuB,MAAOI,EAAKC,GAAlC,SAAuCD,EAAK3C,MAA/B2C,EAAKC,SAKlChB,GACI,cAAC,IAAD,CACI3B,MAAO,CAAE4C,UAAW,IACpB1D,QAAUA,EACV2D,KAAM,CACFC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAETC,WAAYpB,EACZqB,WAAY,SAAAZ,GAAI,OACZ,cAAC,IAAKvC,KAAN,UACI,eAAC,IAAD,CAAMkB,MAAOqB,EAAK3C,KACZwD,MAAO,cAACtC,EAAD,CAAiBC,OAAQwB,EAAKC,KAD3C,UAGI,qBAAKa,IAAKd,EAAKe,SACVC,IAAKhB,EAAK3C,KACVC,MAAO,CAAE2D,OAAQ,OAAQ1D,MAAO,OAAQ2D,QAAS,WAL1D,UAOalB,EAAKmB,kB,SCvH1CC,EAASC,IAATD,KAoGOE,EAlGA,WACX,MAAsC7C,oBAAS,GAA/C,mBAAO8C,EAAP,KAAoBC,EAApB,KACA,EAAgC/C,qBAAhC,mBAAOgD,EAAP,KAAiBC,EAAjB,KACA,EAA8BjD,oBAAS,GAAvC,mBAAOjC,EAAP,KAAgBkC,EAAhB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOkD,EAAP,KAAiBC,EAAjB,KAEAnC,qBAAU,WACD8B,IAIL7C,GAAW,GH0BJ5C,MAAM,SAASI,MAAK,SAACC,GACxB,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,kCAGhB,OAAOF,EAASuD,UG9BfxD,MAAK,SAACQ,GACHgF,EAAYhF,MAEfM,OAAM,SAACC,GACJL,IAAQM,MAAMD,EAAIL,YAErBO,SAAQ,WACLuB,GAAW,SAEpB,CAAC6C,IAEJ,IAeMM,EAAgB,WAClBL,GAAe,IAMnB,OACI,qCACI,cAAC,IAAD,CAAQvD,KAAK,UAAU6D,MAAM,QAAQhD,QALxB,WACjB0C,GAAe,IAIX,kBAGA,cAAC,IAAD,CACI7C,MAAM,mBACNoD,QAASF,EACTG,QAAST,EACThE,MAAO,IACP0E,OACI,sBACI3E,MAAO,CACH4D,QAAS,OACTgB,eAAgB,iBAHxB,UAMI,cAACd,EAAD,CAAMe,QAAQ,EAAd,wCAAsCV,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAUW,cAChD,gCACI,cAAC,IAAD,CAAQtD,QAAS+C,EAAevE,MAAO,CAAE+E,YAAa,GAAtD,oBAGA,cAAC,IAAD,CACIvD,QA7CT,WACf8C,GAAY,GHuBL9F,MAAM,aAAaI,MAAK,SAACC,GAC5B,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MAAMC,MAAM,uBGxBfH,MAAK,WACFU,IAAQC,QAAQ,yBAChB2E,GAAe,MAElBxE,OAAM,SAACC,GACJL,IAAQM,MAAMD,EAAIL,YAErBO,SAAQ,WACLyE,GAAY,OAmCI3D,KAAK,UACLzB,QAASmF,EACTW,SAAU9F,GAA8C,KAA3B,OAARiF,QAAQ,IAARA,OAAA,EAAAA,EAAUc,cAAcC,QAJjD,4BAjBhB,SA6BI,cAAC,IAAD,CACIhG,QAASA,EACTiG,WAAW,aACX9B,WAAU,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAUc,cACtB3B,WAAY,SAACZ,GAAD,OACR,cAAC,IAAKvC,KAAN,UACI,cAAC,IAAKA,KAAKiF,KAAX,CACI/D,MAAOqB,EAAK2C,SAAStF,KACrBuF,YAAW,WAAM5C,EAAKmB,oBCtF9C0B,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QACRC,EAAU3B,IAAV2B,MAuCOC,MApCf,WACI,MAA4BxE,oBAAS,GAArC,mBAAOyE,EAAP,KAAeC,EAAf,KAEA,OACA,eAAC,IAAD,CAAQ7F,MAAS,CAAC2D,OAAQ,SAA1B,UACE,eAAC4B,EAAD,eAAS,sBAAKO,UAAU,SAAS9F,MAAO,CAAC4D,QAAS,OAAQgB,eAAgB,iBAAjE,UACL,cAACc,EAAD,CACIK,MAAO,EACP/F,MAAO,CAAEgG,MAAO,QAASC,WAAY,UAAWC,aAAc,GAFlE,sBAMCN,GACG,8BACI,cAAC,EAAD,YAMZ,cAACH,EAAD,CAASzF,MAAS,CAChBmG,QAAU,OACVC,UAAW,oBACXC,SAAU,QAHZ,SAKKT,EACG,cAAC,EAAD,IAEA,cAAC,EAAD,CAAWnG,UAAW,kBAAMoG,GAAU,YC5BrCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5H,MAAK,YAAkD,IAA/C6H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAShH,OACP,cAAC,IAAMiH,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4f137492.chunk.js","sourcesContent":["// add all requests to the server\n//login api -> create a requist t o the server\nexport const login = (credential) => {\n\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n}\n// fetch menu\n    export const getMenus = (restId) => {\n        return fetch(`/restaurant/${restId}/menu`).then((response) => {\n            if (response.status < 200 || response.status >= 300\n            ) {\n                throw Error(\"Fail to get menus\");\n            }\n\n            return response.json();\n        });\n    };\n// fetch restaurants\n    export const getRestaurants = () => {\n        return fetch(\"/restaurants\").then((response) => {\n            if (response.status < 200 || response.status >= 300\n            ) {\n                throw Error(\"Fail to get restaurants\");\n            }\n\n            return response.json();\n        });\n    };\n\n    export const getCart = () => {\n        return fetch(\"/cart\").then((response) => {\n            if (response.status < 200 || response.status >= 300\n            ) {\n                throw Error(\"Fail to get shopping cart data\");\n            }\n\n            return response.json();\n        });\n    };\n\n    export const checkout = () => {\n        return fetch(\"/checkout\").then((response) => {\n            if (response.status < 200 || response.status >= 300\n            ) {\n                throw Error(\"Fail to checkout\");\n            }\n        });\n    };\n\n    export const addItemToCart = (itemId) => {\n        return fetch(`/order/${itemId}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\",\n        }).then((response) => {\n            if (response.status < 200 || response.status >= 300\n            ) {\n                throw Error(\"Fail to add menu item to shopping cart\");\n            }\n        });\n    };\n\n\n\n","// import React, {Component} from \"react\";\n// import {Form, Input, Button, Checkbox, message} from 'antd';\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\n// import {login} from \"../utls\";\n\n// class LoginForm extends Component {\n//     state = {\n//         loading : false\n//     }\n//     onFinish = (values) => {\n//             this.setState({loading : true})\n//             console.log('Received values of form: ', values);\n//             login(values)\n//                 .then( () => {\n//                     // show logged\n//                     message.success('Login Successful');\n//                     }\n//\n//                 )\n//                 .catch( err => {\n//                     // show err\n//                     message.error(err.message);\n//                 })\n//                 .finally(()=>{\n//                     this.setState({\n//                         loading: false,\n//                     });\n//                 });\n//\n//         };\n//         render = () => {\n//             return (\n//                 <Form\n//                     name=\"normal_login\"\n//                     className=\"login-form\"\n//                     onFinish={this.onFinish} // need to be this\n//                 >\n//                     <Form.Item\n//                         name=\"username\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: 'Please input your Username!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"password\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: 'Please input your Password!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input.Password\n//                             prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n//                             placeholder=\"Password\"\n//                         />\n//                     </Form.Item>\n//                     <Form.Item>\n//\n//                     </Form.Item>\n//\n//                     <Form.Item>\n//                         <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n//                             Log in\n//                         </Button>\n//\n//                     </Form.Item>\n//                 </Form>\n//             );\n//         }\n//\n// }\n\nimport { Button, Form, Input, message } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nclass LoginForm extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (data) => {\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render = () => {\n        return (\n            <Form\n                name=\"normal_login\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\n                >\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Login\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\nexport default LoginForm;\n\n\n","import React, {useState, useEffect} from 'react';\nimport { Select, message, List, Card, Tooltip, Button } from 'antd';\nimport { getRestaurants, getMenus, addItemToCart } from '../utils';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nfunction AddToCartButton({itemId}) {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        // add selected menu to the cart\n        // step1: set loading to true\n        // step2: add menu to cart and inform the server\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n\n    }\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    )\n}\n\nfunction FoodList(props) {\n    // current selected option\n    const [curRest, setCurRest] = useState();\n    // loading restaurant status\n    const [loadingRest, setLoadingRest] = useState(false);\n    // restaurant list\n    const [restaurants, setRestaurants] = useState([]);\n    // loading restaurant menu\n    const [loading, setLoading] = useState(false);\n    // store menu status\n    const [foodData, setFoodData] = useState([]);\n\n    // fetch restaurant list\n    useEffect(() => {\n        // step1: set loading restaurant = true\n        // step2: fetch restaurant list from the server\n        setLoadingRest(true);\n        getRestaurants()\n            .then( response => {\n                setRestaurants(response);\n            })\n            .catch( err => {\n                message.error(err.message);\n            })\n            .finally( () => {\n                setLoadingRest(false);\n            })\n    }, []);\n\n    // fetch menu of current selected restaurant\n    useEffect( () => {\n        // step1: set loading menu status\n        // step2: fetch menu from the server\n        if(curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then( response => {\n                    setFoodData(response);\n                })\n                .catch( err => {\n                    message.error(err.message);\n                })\n                .finally( () => {\n                    setLoading(false);\n                })\n        }\n    }, [curRest])\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                loading={loadingRest}\n                style={{ width: 300 }}\n                placeholder=\"Select a restaurant\"\n                onChange={ () => {} }\n                onSelect={ value => setCurRest(value) }\n            >\n                {\n                    restaurants.map(\n                        item => <Option key={item.id} value={item.id}>{item.name}</Option>\n                    )\n                }\n            </Select>\n            {\n                curRest && (\n                    <List\n                        style={{ marginTop: 20 }}\n                        loading={ loading }\n                        grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 3,\n                            xxl: 3,\n                        }}\n                        dataSource={foodData}\n                        renderItem={item => (\n                            <List.Item>\n                                <Card title={item.name}\n                                      extra={<AddToCartButton itemId={item.id}/>}\n                                >\n                                    <img src={item.imageUrl}\n                                         alt={item.name}\n                                         style={{ height: 'auto', width: \"100%\", display: \"block\" }}\n                                    />\n                                    Price: { item.price }\n                                </Card>\n                            </List.Item>\n                        )}\n                    />\n                )\n            }\n        </>\n    );\n}\n\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData?.orderItemList}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;\n","import { Layout,  Typography } from 'antd';\nimport React from \"react\";\nimport { useState } from \"react\";\n\nimport './App.css';\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n    <Layout style = {{height: '100vh'}}>\n      <Header> <div className=\"header\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Title\n              level={2}\n              style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n          >\n              Lai Food\n          </Title>\n          {authed && (\n              <div>\n                  <MyCart/>\n              </div>\n          )}\n      </div>\n      </Header>\n\n      <Content style = {{\n        padding : \"50px\",\n        maxHeight: \"calc(100% - 64px)\",// suntract the headerheight\n        overflow: \"auto\"\n      }}>\n          {authed ? (\n              <FoodList />\n          ) : (\n              <LoginForm onSuccess={() => setAuthed(true)} />\n          )}\n\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}